@page "/fetchdata"
@inject IWeatherForecastManager _weatherForecastManager

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-5">
    <MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
    <MudText Class="mb-8">This component demonstrates fetching data from the API.</MudText>

    @if (forecasts == null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
    else
    {
        <MudTable Items="forecasts" Hover="true" SortLabel="Sort By" Elevation="0">
            <HeaderContent>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<WeatherForecast, object>(x => x.Date)">Date</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x => x.TemperatureC)">Temp. (C)</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x => x.TemperatureF)">Temp. (F)</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x => x.Summary)">Summary</MudTableSortLabel></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Date">@context.Date.ToShortDateString()</MudTd>
                <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
                <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
                <MudTd DataLabel="Summary">@context.Summary</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[] { 5, 10 }" />
            </PagerContent>
        </MudTable>
    }
</MudContainer>

@code {
    private IEnumerable<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync()
    {
        var result = await _weatherForecastManager.GetForecastAsync();

        if (result.Succeeded)
        {
            forecasts = result.Data;
        }
        else
        {
            forecasts = new List<WeatherForecast>();
        }
    }
}
